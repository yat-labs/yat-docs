---
id: {{#lambda.lowercase}}{{classname}}{{/lambda.lowercase}}
title: {{classname}}
---

{{#description}}{{description}}{{/description}}

Method | HTTP request | Description
------------- | ------------- | -------------
{{#operations}}{{#operation}}[**{{operationId}}**]({{classname}}.md#{{operationIdLowerCase}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}

{{#operations}}
{{#operation}}
## **{{{operationId}}}**

{{{summary}}}
{{#notes}}{{{notes}}}{{/notes}}

### Request with Combine's publisher:
```swift
public func {{operationId}}Publisher({{#allParams}}{{paramName}}: {{{dataType}}}{{^required}}?{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}) -> AnyPublisher<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}EmptyAPIModel{{/returnType}}, APIError>
```

#### Example:

```swift
import YatLib

{{#allParams}}
let {{paramName}} = {{{vendorExtensions.x-swift-example}}} // {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
{{/allParams}}
var cancelables = Set<AnyCancellable>()

Yat.api.{{classVarName}}.{{operationId}}Publisher({{#allParams}}{{paramName}}: {{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}})
    .sink(
        receiveCompletion: { [weak self] in /* Handle completion/failure */ },
        receiveValue: { /* Handle response */ }
    )
    .store(in: &cancelables)
```

### Request with closure:
```swift
public func {{operationId}}({{#allParams}}{{paramName}}: {{{dataType}}}{{^required}}?{{/required}}, {{/allParams}}result: @escaping (Result<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}EmptyAPIModel{{/returnType}}, APIError>) -> Void)
```

#### Example 
```swift
import YatLib

{{#allParams}}
let {{paramName}} = {{{vendorExtensions.x-swift-example}}} // {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
{{/allParams}}

Yat.api.{{classVarName}}.{{operationId}}({{#allParams}}{{paramName}}: {{{dataType}}}{{^required}}?{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}} { result in
    switch result {
        case let .success(model):
        // Handle response
        case let .failure(error):
        // Handle failure
    }
}
```

### Parameters
{{^allParams}}This endpoint does not need any parameter.{{/allParams}}{{#allParams}}{{#-last}}
Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------{{/-last}}{{/allParams}}
{{#allParams}} **{{paramName}}** | {{#isPrimitiveType}}**{{dataType}}**{{/isPrimitiveType}}{{^isPrimitiveType}}[**{{dataType}}**]({{baseType}}.md){{/isPrimitiveType}} | {{description}} | {{^required}}[optional] {{/required}}{{#defaultValue}}[default to {{defaultValue}}]{{/defaultValue}}
{{/allParams}}

### Return type

{{#returnType}}{{#returnTypeIsPrimitive}}**{{{returnType}}}**{{/returnTypeIsPrimitive}}{{^returnTypeIsPrimitive}}[**{{{returnType}}}**]({{returnBaseType}}.md){{/returnTypeIsPrimitive}}{{/returnType}}{{^returnType}}EmptyAPIModel (empty response body){{/returnType}}

### Authorization

{{^authMethods}}No authorization required{{/authMethods}}{{#authMethods}}[{{{name}}}](../index.md#{{{name}}}){{^-last}}, {{/-last}}{{/authMethods}}

[[Back to top]](#) [[Back to API list]](../index.md#documentation-for-api-endpoints) [[Back to Model list]](../index.md#documentation-for-models) [[Back to index]](../index.md)

{{/operation}}
{{/operations}}